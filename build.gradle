apply plugin: "war"

repositories {
    mavenLocal()
    mavenCentral()
}

ext {

	tomcatHome = "D:\\software\\apache-tomcat-7.0.42"

	slf4jVersion = "1.7.5"
	logbackVersion = "1.0.13"
	aspectjVersion = "1.7.3"
	springVersion = "3.2.4.RELEASE"
	springSecurityVersion = "3.1.4.RELEASE"
	hibernateVersion = "4.2.5.Final"
	jacksonVersion = "2.2.3"
}

task deployToTomcat(dependsOn: "build") << {
    copy {
        from war.archivePath
        into "$tomcatHome\\webapps"
    }
}

dependencies {

    providedCompile "javax.servlet:servlet-api:2.5"
    providedCompile "javax.servlet.jsp:jsp-api:2.2"
    providedCompile "javax.el:el-api:2.2"
    compile "javax.servlet.jsp.jstl:jstl-api:1.2"
    compile "org.glassfish.web:jstl-impl:1.2"

    compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    compile "org.slf4j:slf4j-api:$slf4jVersion"

    compile "ch.qos.logback:logback-classic:$logbackVersion"
    compile "ch.qos.logback:logback-core:$logbackVersion"
    compile "ch.qos.logback:logback-access:$logbackVersion"

    compile "org.aspectj:aspectjrt:$aspectjVersion"
    compile "org.aspectj:aspectjweaver:$aspectjVersion"

    compile "org.apache.commons:commons-lang3:3.1"

    // Spring dependencies
    compile ("org.springframework:spring-core:$springVersion") {
    	exclude group: "commons-logging", module: "commons-logging"
    }
    compile ("org.springframework:spring-context:$springVersion") {
    	exclude group: "commons-logging", module: "commons-logging"
    }
    compile "org.springframework:spring-test:$springVersion"
    compile "org.springframework:spring-aop:$springVersion"
    compile "org.springframework:spring-aspects:$springVersion"
    compile "org.springframework:spring-jdbc:$springVersion"
    compile "org.springframework:spring-orm:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"

    compile ("org.springframework.security:spring-security-core:$springSecurityVersion") {
    	exclude group: "commons-logging", module: "commons-logging"
    }
    compile ("org.springframework.security:spring-security-config:$springSecurityVersion") {
    	exclude group: "commons-logging", module: "commons-logging"
    }
    compile "org.springframework.security:spring-security-web:$springSecurityVersion"
    compile "org.springframework.security:spring-security-taglibs:$springSecurityVersion"

    compile "org.hsqldb:hsqldb:2.2.9"

    compile "mysql:mysql-connector-java:5.0.8"

    // Hibernate dependencies
    compile "org.hibernate:hibernate-core:$hibernateVersion"
    compile "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final"

    compile ("org.hibernate:hibernate-validator:4.2.0.Final") {
        exclude group: "javax.xml.bind", module: "jaxb-api"
        exclude group: "com.sun.xml.bind", module: "jaxb-impl"
    }

    compile "javax.validation:validation-api:1.1.0.Final"
    compile "cglib:cglib-nodep:3.0"
    compile "javax.transaction:jta:1.1"

    compile "commons-pool:commons-pool:1.6"
    compile ("commons-dbcp:commons-dbcp:1.4") {
    	exclude group: "commons-logging", module: "commons-logging"
    	exclude group: "xml-apis", module: "xml-apis"
    }
    compile ("commons-digester:commons-digester:2.1") {
    	exclude group: "commons-logging", module: "commons-logging"
    }
    compile "commons-codec:commons-codec:1.8"

    compile "org.apache.tiles:tiles-jsp:2.2.2"

    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"

    compile "javax.mail:mail:1.4.7"

    compile "junit:junit:4.11"

    compile "org.jasypt:jasypt:1.9.1"
	compile "org.jasypt:jasypt-spring31:1.9.1"

	compile "net.tanesha.recaptcha4j:recaptcha4j:0.0.7"
	
	compile "org.kohsuke:geoip:1.2.8"
}